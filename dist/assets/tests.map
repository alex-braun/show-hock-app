{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","show-hock-app/tests/adapters/application.jshint.lint-test.js","show-hock-app/tests/adapters/artist-search.jshint.lint-test.js","show-hock-app/tests/adapters/artist.jshint.lint-test.js","show-hock-app/tests/adapters/region-search.jshint.lint-test.js","show-hock-app/tests/adapters/region.jshint.lint-test.js","show-hock-app/tests/adapters/venue-calendar.jshint.lint-test.js","show-hock-app/tests/adapters/venue-search.jshint.lint-test.js","show-hock-app/tests/app.jshint.lint-test.js","show-hock-app/tests/breakpoints.jshint.lint-test.js","show-hock-app/tests/components/all-search-detail.jshint.lint-test.js","show-hock-app/tests/components/all-search.jshint.lint-test.js","show-hock-app/tests/components/artist-date.jshint.lint-test.js","show-hock-app/tests/components/artist-detail.jshint.lint-test.js","show-hock-app/tests/components/artist-info.jshint.lint-test.js","show-hock-app/tests/components/artist-list.jshint.lint-test.js","show-hock-app/tests/components/artist-search-detail.jshint.lint-test.js","show-hock-app/tests/components/button-to-concert.jshint.lint-test.js","show-hock-app/tests/components/button-to-region.jshint.lint-test.js","show-hock-app/tests/components/button-track-event.jshint.lint-test.js","show-hock-app/tests/components/button-untrack-event.jshint.lint-test.js","show-hock-app/tests/components/change-location.jshint.lint-test.js","show-hock-app/tests/components/change-password-form.jshint.lint-test.js","show-hock-app/tests/components/concert-also-featuring.jshint.lint-test.js","show-hock-app/tests/components/concert-featuring-artist.jshint.lint-test.js","show-hock-app/tests/components/concert-location-map.jshint.lint-test.js","show-hock-app/tests/components/concert-venue-details.jshint.lint-test.js","show-hock-app/tests/components/date-range-picker.jshint.lint-test.js","show-hock-app/tests/components/email-input.jshint.lint-test.js","show-hock-app/tests/components/event-carousel-outer.jshint.lint-test.js","show-hock-app/tests/components/events-carousel.jshint.lint-test.js","show-hock-app/tests/components/festival-artist-list.jshint.lint-test.js","show-hock-app/tests/components/landing-page-search-menu.jshint.lint-test.js","show-hock-app/tests/components/list-every-artist.jshint.lint-test.js","show-hock-app/tests/components/location-map.jshint.lint-test.js","show-hock-app/tests/components/nav-link-to.jshint.lint-test.js","show-hock-app/tests/components/navbar-location.jshint.lint-test.js","show-hock-app/tests/components/nearby-regions.jshint.lint-test.js","show-hock-app/tests/components/pagination-bar.jshint.lint-test.js","show-hock-app/tests/components/password-confirmation-input.jshint.lint-test.js","show-hock-app/tests/components/password-input.jshint.lint-test.js","show-hock-app/tests/components/past-events.jshint.lint-test.js","show-hock-app/tests/components/popular-artists.jshint.lint-test.js","show-hock-app/tests/components/purchase-tickets.jshint.lint-test.js","show-hock-app/tests/components/region-detail.jshint.lint-test.js","show-hock-app/tests/components/region-search-detail.jshint.lint-test.js","show-hock-app/tests/components/search-input-dropdown.jshint.lint-test.js","show-hock-app/tests/components/search-input-main.jshint.lint-test.js","show-hock-app/tests/components/search-input-page-wrapper.jshint.lint-test.js","show-hock-app/tests/components/search-input-page.jshint.lint-test.js","show-hock-app/tests/components/search-input.jshint.lint-test.js","show-hock-app/tests/components/search-options-menu-mobile.jshint.lint-test.js","show-hock-app/tests/components/search-options-menu.jshint.lint-test.js","show-hock-app/tests/components/search-popular.jshint.lint-test.js","show-hock-app/tests/components/search-results-artist.jshint.lint-test.js","show-hock-app/tests/components/search-results-region.jshint.lint-test.js","show-hock-app/tests/components/search-results-venue.jshint.lint-test.js","show-hock-app/tests/components/search-title.jshint.lint-test.js","show-hock-app/tests/components/sign-in-form.jshint.lint-test.js","show-hock-app/tests/components/sign-up-form.jshint.lint-test.js","show-hock-app/tests/components/similar-artists.jshint.lint-test.js","show-hock-app/tests/components/tracking-button-calendar.jshint.lint-test.js","show-hock-app/tests/components/tracking-buttons-concert.jshint.lint-test.js","show-hock-app/tests/components/upcoming-events.jshint.lint-test.js","show-hock-app/tests/components/upcoming-region-events.jshint.lint-test.js","show-hock-app/tests/components/upcoming-venue-events.jshint.lint-test.js","show-hock-app/tests/components/user-calendar-detail.jshint.lint-test.js","show-hock-app/tests/components/user-search-region.jshint.lint-test.js","show-hock-app/tests/components/venue-detail.jshint.lint-test.js","show-hock-app/tests/components/venue-search-detail.jshint.lint-test.js","show-hock-app/tests/controllers/application.jshint.lint-test.js","show-hock-app/tests/controllers/artist/event.jshint.lint-test.js","show-hock-app/tests/controllers/artist/event/concert.jshint.lint-test.js","show-hock-app/tests/controllers/artist/event/results.jshint.lint-test.js","show-hock-app/tests/controllers/region/event.jshint.lint-test.js","show-hock-app/tests/controllers/region/event/concert.jshint.lint-test.js","show-hock-app/tests/controllers/region/event/results.jshint.lint-test.js","show-hock-app/tests/controllers/searches/search/results.jshint.lint-test.js","show-hock-app/tests/controllers/user/calendar.jshint.lint-test.js","show-hock-app/tests/controllers/user/change-location.jshint.lint-test.js","show-hock-app/tests/controllers/venue/event/concert.jshint.lint-test.js","show-hock-app/tests/controllers/venue/event/results.jshint.lint-test.js","show-hock-app/tests/controllers/venue/search/index.jshint.lint-test.js","show-hock-app/tests/helpers/arr-last.jshint.lint-test.js","show-hock-app/tests/helpers/destroy-app.js","show-hock-app/tests/helpers/destroy-app.jshint.lint-test.js","show-hock-app/tests/helpers/ember-cli-g-maps/register-async-helpers.js","show-hock-app/tests/helpers/ember-cli-g-maps/select-autocomplete-place-helper.js","show-hock-app/tests/helpers/ember-cli-g-maps/setup-test.js","show-hock-app/tests/helpers/ember-cli-g-maps/stub-geocode-requests-helper.js","show-hock-app/tests/helpers/ember-cli-g-maps/wait-for-geocode-requests-helper.js","show-hock-app/tests/helpers/ember-cli-g-maps/wait-for-google-map-helper.js","show-hock-app/tests/helpers/eq.jshint.lint-test.js","show-hock-app/tests/helpers/flash-message.js","show-hock-app/tests/helpers/flash-message.jshint.lint-test.js","show-hock-app/tests/helpers/format-day.jshint.lint-test.js","show-hock-app/tests/helpers/format-mon.jshint.lint-test.js","show-hock-app/tests/helpers/format-month.jshint.lint-test.js","show-hock-app/tests/helpers/format-time.jshint.lint-test.js","show-hock-app/tests/helpers/format-weekday.jshint.lint-test.js","show-hock-app/tests/helpers/format-year.jshint.lint-test.js","show-hock-app/tests/helpers/gt.jshint.lint-test.js","show-hock-app/tests/helpers/lt.jshint.lint-test.js","show-hock-app/tests/helpers/module-for-acceptance.js","show-hock-app/tests/helpers/module-for-acceptance.jshint.lint-test.js","show-hock-app/tests/helpers/neq.jshint.lint-test.js","show-hock-app/tests/helpers/no-parens.jshint.lint-test.js","show-hock-app/tests/helpers/not-including-curr.jshint.lint-test.js","show-hock-app/tests/helpers/prev-curr.jshint.lint-test.js","show-hock-app/tests/helpers/resolver.js","show-hock-app/tests/helpers/resolver.jshint.lint-test.js","show-hock-app/tests/helpers/responsive.js","show-hock-app/tests/helpers/responsive.jshint.lint-test.js","show-hock-app/tests/helpers/start-app.js","show-hock-app/tests/helpers/start-app.jshint.lint-test.js","show-hock-app/tests/helpers/sum.jshint.lint-test.js","show-hock-app/tests/helpers/truncate.jshint.lint-test.js","show-hock-app/tests/helpers/upper-case.jshint.lint-test.js","show-hock-app/tests/initializers/geo-location.jshint.lint-test.js","show-hock-app/tests/initializers/responsive.jshint.lint-test.js","show-hock-app/tests/initializers/text-field.jshint.lint-test.js","show-hock-app/tests/integration/components/all-search-detail-test.js","show-hock-app/tests/integration/components/all-search-detail-test.jshint.lint-test.js","show-hock-app/tests/integration/components/all-search-test.js","show-hock-app/tests/integration/components/all-search-test.jshint.lint-test.js","show-hock-app/tests/integration/components/artist-date-test.js","show-hock-app/tests/integration/components/artist-date-test.jshint.lint-test.js","show-hock-app/tests/integration/components/artist-detail-test.js","show-hock-app/tests/integration/components/artist-detail-test.jshint.lint-test.js","show-hock-app/tests/integration/components/artist-info-test.js","show-hock-app/tests/integration/components/artist-info-test.jshint.lint-test.js","show-hock-app/tests/integration/components/artist-list-test.js","show-hock-app/tests/integration/components/artist-list-test.jshint.lint-test.js","show-hock-app/tests/integration/components/artist-search-detail-test.js","show-hock-app/tests/integration/components/artist-search-detail-test.jshint.lint-test.js","show-hock-app/tests/integration/components/button-to-concert-test.js","show-hock-app/tests/integration/components/button-to-concert-test.jshint.lint-test.js","show-hock-app/tests/integration/components/button-to-region-test.js","show-hock-app/tests/integration/components/button-to-region-test.jshint.lint-test.js","show-hock-app/tests/integration/components/button-track-event-test.js","show-hock-app/tests/integration/components/button-track-event-test.jshint.lint-test.js","show-hock-app/tests/integration/components/button-untrack-event-test.js","show-hock-app/tests/integration/components/button-untrack-event-test.jshint.lint-test.js","show-hock-app/tests/integration/components/change-location-test.js","show-hock-app/tests/integration/components/change-location-test.jshint.lint-test.js","show-hock-app/tests/integration/components/change-password-form-test.js","show-hock-app/tests/integration/components/change-password-form-test.jshint.lint-test.js","show-hock-app/tests/integration/components/concert-also-featuring-test.js","show-hock-app/tests/integration/components/concert-also-featuring-test.jshint.lint-test.js","show-hock-app/tests/integration/components/concert-featuring-artist-test.js","show-hock-app/tests/integration/components/concert-featuring-artist-test.jshint.lint-test.js","show-hock-app/tests/integration/components/concert-location-map-test.js","show-hock-app/tests/integration/components/concert-location-map-test.jshint.lint-test.js","show-hock-app/tests/integration/components/concert-venue-details-test.js","show-hock-app/tests/integration/components/concert-venue-details-test.jshint.lint-test.js","show-hock-app/tests/integration/components/date-range-picker-test.js","show-hock-app/tests/integration/components/date-range-picker-test.jshint.lint-test.js","show-hock-app/tests/integration/components/email-input-test.js","show-hock-app/tests/integration/components/email-input-test.jshint.lint-test.js","show-hock-app/tests/integration/components/event-carousel-outer-test.js","show-hock-app/tests/integration/components/event-carousel-outer-test.jshint.lint-test.js","show-hock-app/tests/integration/components/festival-artist-list-test.js","show-hock-app/tests/integration/components/festival-artist-list-test.jshint.lint-test.js","show-hock-app/tests/integration/components/index-carousel-test.js","show-hock-app/tests/integration/components/index-carousel-test.jshint.lint-test.js","show-hock-app/tests/integration/components/landing-page-search-menu-test.js","show-hock-app/tests/integration/components/landing-page-search-menu-test.jshint.lint-test.js","show-hock-app/tests/integration/components/list-every-artist-test.js","show-hock-app/tests/integration/components/list-every-artist-test.jshint.lint-test.js","show-hock-app/tests/integration/components/location-map-test.js","show-hock-app/tests/integration/components/location-map-test.jshint.lint-test.js","show-hock-app/tests/integration/components/nav-link-to-test.js","show-hock-app/tests/integration/components/nav-link-to-test.jshint.lint-test.js","show-hock-app/tests/integration/components/navbar-location-test.js","show-hock-app/tests/integration/components/navbar-location-test.jshint.lint-test.js","show-hock-app/tests/integration/components/nearby-regions-test.js","show-hock-app/tests/integration/components/nearby-regions-test.jshint.lint-test.js","show-hock-app/tests/integration/components/pagination-bar-test.js","show-hock-app/tests/integration/components/pagination-bar-test.jshint.lint-test.js","show-hock-app/tests/integration/components/password-confirmation-input-test.js","show-hock-app/tests/integration/components/password-confirmation-input-test.jshint.lint-test.js","show-hock-app/tests/integration/components/password-input-test.js","show-hock-app/tests/integration/components/password-input-test.jshint.lint-test.js","show-hock-app/tests/integration/components/past-events-test.js","show-hock-app/tests/integration/components/past-events-test.jshint.lint-test.js","show-hock-app/tests/integration/components/popular-artists-test.js","show-hock-app/tests/integration/components/popular-artists-test.jshint.lint-test.js","show-hock-app/tests/integration/components/purchase-tickets-test.js","show-hock-app/tests/integration/components/purchase-tickets-test.jshint.lint-test.js","show-hock-app/tests/integration/components/region-detail-test.js","show-hock-app/tests/integration/components/region-detail-test.jshint.lint-test.js","show-hock-app/tests/integration/components/region-search-detail-test.js","show-hock-app/tests/integration/components/region-search-detail-test.jshint.lint-test.js","show-hock-app/tests/integration/components/search-input-dropdown-test.js","show-hock-app/tests/integration/components/search-input-dropdown-test.jshint.lint-test.js","show-hock-app/tests/integration/components/search-input-main-test.js","show-hock-app/tests/integration/components/search-input-main-test.jshint.lint-test.js","show-hock-app/tests/integration/components/search-input-page-test.js","show-hock-app/tests/integration/components/search-input-page-test.jshint.lint-test.js","show-hock-app/tests/integration/components/search-input-page-wrapper-test.js","show-hock-app/tests/integration/components/search-input-page-wrapper-test.jshint.lint-test.js","show-hock-app/tests/integration/components/search-input-test.js","show-hock-app/tests/integration/components/search-input-test.jshint.lint-test.js","show-hock-app/tests/integration/components/search-options-menu-mobile-test.js","show-hock-app/tests/integration/components/search-options-menu-mobile-test.jshint.lint-test.js","show-hock-app/tests/integration/components/search-options-menu-test.js","show-hock-app/tests/integration/components/search-options-menu-test.jshint.lint-test.js","show-hock-app/tests/integration/components/search-popular-test.js","show-hock-app/tests/integration/components/search-popular-test.jshint.lint-test.js","show-hock-app/tests/integration/components/search-results-artist-test.js","show-hock-app/tests/integration/components/search-results-artist-test.jshint.lint-test.js","show-hock-app/tests/integration/components/search-results-region-test.js","show-hock-app/tests/integration/components/search-results-region-test.jshint.lint-test.js","show-hock-app/tests/integration/components/search-results-venue-test.js","show-hock-app/tests/integration/components/search-results-venue-test.jshint.lint-test.js","show-hock-app/tests/integration/components/search-title-test.js","show-hock-app/tests/integration/components/search-title-test.jshint.lint-test.js","show-hock-app/tests/integration/components/sign-in-form-test.js","show-hock-app/tests/integration/components/sign-in-form-test.jshint.lint-test.js","show-hock-app/tests/integration/components/sign-up-form-test.js","show-hock-app/tests/integration/components/sign-up-form-test.jshint.lint-test.js","show-hock-app/tests/integration/components/similar-artists-test.js","show-hock-app/tests/integration/components/similar-artists-test.jshint.lint-test.js","show-hock-app/tests/integration/components/tracking-button-calendar-test.js","show-hock-app/tests/integration/components/tracking-button-calendar-test.jshint.lint-test.js","show-hock-app/tests/integration/components/tracking-buttons-concert-test.js","show-hock-app/tests/integration/components/tracking-buttons-concert-test.jshint.lint-test.js","show-hock-app/tests/integration/components/upcoming-events-test.js","show-hock-app/tests/integration/components/upcoming-events-test.jshint.lint-test.js","show-hock-app/tests/integration/components/upcoming-region-events-test.js","show-hock-app/tests/integration/components/upcoming-region-events-test.jshint.lint-test.js","show-hock-app/tests/integration/components/upcoming-venue-events-test.js","show-hock-app/tests/integration/components/upcoming-venue-events-test.jshint.lint-test.js","show-hock-app/tests/integration/components/user-calendar-detail-test.js","show-hock-app/tests/integration/components/user-calendar-detail-test.jshint.lint-test.js","show-hock-app/tests/integration/components/user-search-region-test.js","show-hock-app/tests/integration/components/user-search-region-test.jshint.lint-test.js","show-hock-app/tests/integration/components/venue-detail-test.js","show-hock-app/tests/integration/components/venue-detail-test.jshint.lint-test.js","show-hock-app/tests/integration/components/venue-search-detail-test.js","show-hock-app/tests/integration/components/venue-search-detail-test.jshint.lint-test.js","show-hock-app/tests/mixins/reset-scroll.jshint.lint-test.js","show-hock-app/tests/models/artist-search.jshint.lint-test.js","show-hock-app/tests/models/artist.jshint.lint-test.js","show-hock-app/tests/models/calendar.jshint.lint-test.js","show-hock-app/tests/models/concert.jshint.lint-test.js","show-hock-app/tests/models/location-geo.jshint.lint-test.js","show-hock-app/tests/models/location.jshint.lint-test.js","show-hock-app/tests/models/performer.jshint.lint-test.js","show-hock-app/tests/models/region-search.jshint.lint-test.js","show-hock-app/tests/models/region.jshint.lint-test.js","show-hock-app/tests/models/show.jshint.lint-test.js","show-hock-app/tests/models/similar-artist.jshint.lint-test.js","show-hock-app/tests/models/upcoming-event.jshint.lint-test.js","show-hock-app/tests/models/user.jshint.lint-test.js","show-hock-app/tests/models/venue-calendar.jshint.lint-test.js","show-hock-app/tests/models/venue-search.jshint.lint-test.js","show-hock-app/tests/models/venue.jshint.lint-test.js","show-hock-app/tests/resolver.jshint.lint-test.js","show-hock-app/tests/router.jshint.lint-test.js","show-hock-app/tests/routes/application.jshint.lint-test.js","show-hock-app/tests/routes/artist.jshint.lint-test.js","show-hock-app/tests/routes/artist/event.jshint.lint-test.js","show-hock-app/tests/routes/artist/event/concert.jshint.lint-test.js","show-hock-app/tests/routes/artist/event/results.jshint.lint-test.js","show-hock-app/tests/routes/artist/search.jshint.lint-test.js","show-hock-app/tests/routes/artist/search/index.jshint.lint-test.js","show-hock-app/tests/routes/artist/search/results.jshint.lint-test.js","show-hock-app/tests/routes/change-password.jshint.lint-test.js","show-hock-app/tests/routes/index.jshint.lint-test.js","show-hock-app/tests/routes/region.jshint.lint-test.js","show-hock-app/tests/routes/region/event.jshint.lint-test.js","show-hock-app/tests/routes/region/event/concert.jshint.lint-test.js","show-hock-app/tests/routes/region/event/results.jshint.lint-test.js","show-hock-app/tests/routes/region/search.jshint.lint-test.js","show-hock-app/tests/routes/region/search/index.jshint.lint-test.js","show-hock-app/tests/routes/region/search/results.jshint.lint-test.js","show-hock-app/tests/routes/searches.jshint.lint-test.js","show-hock-app/tests/routes/searches/search.jshint.lint-test.js","show-hock-app/tests/routes/searches/search/results.jshint.lint-test.js","show-hock-app/tests/routes/sign-in.jshint.lint-test.js","show-hock-app/tests/routes/sign-up.jshint.lint-test.js","show-hock-app/tests/routes/sign-up/index.jshint.lint-test.js","show-hock-app/tests/routes/sign-up/new.jshint.lint-test.js","show-hock-app/tests/routes/user.jshint.lint-test.js","show-hock-app/tests/routes/user/calendar.jshint.lint-test.js","show-hock-app/tests/routes/user/change-location.jshint.lint-test.js","show-hock-app/tests/routes/user/change-location/confirm.jshint.lint-test.js","show-hock-app/tests/routes/user/change-location/results.jshint.lint-test.js","show-hock-app/tests/routes/venue.jshint.lint-test.js","show-hock-app/tests/routes/venue/event.jshint.lint-test.js","show-hock-app/tests/routes/venue/event/concert.jshint.lint-test.js","show-hock-app/tests/routes/venue/event/results.jshint.lint-test.js","show-hock-app/tests/routes/venue/search.jshint.lint-test.js","show-hock-app/tests/routes/venue/search/index.jshint.lint-test.js","show-hock-app/tests/routes/venue/search/results.jshint.lint-test.js","show-hock-app/tests/serializers/application.jshint.lint-test.js","show-hock-app/tests/serializers/calendar.jshint.lint-test.js","show-hock-app/tests/serializers/location.jshint.lint-test.js","show-hock-app/tests/serializers/region-search.jshint.lint-test.js","show-hock-app/tests/serializers/region.jshint.lint-test.js","show-hock-app/tests/serializers/show.jshint.lint-test.js","show-hock-app/tests/serializers/user.jshint.lint-test.js","show-hock-app/tests/services/access-artist-data.jshint.lint-test.js","show-hock-app/tests/services/access-artist-name.jshint.lint-test.js","show-hock-app/tests/services/access-artist-params.jshint.lint-test.js","show-hock-app/tests/services/access-artist-show-count.jshint.lint-test.js","show-hock-app/tests/services/access-region-obj.jshint.lint-test.js","show-hock-app/tests/services/access-venue-name.jshint.lint-test.js","show-hock-app/tests/services/ajax.jshint.lint-test.js","show-hock-app/tests/services/auth.jshint.lint-test.js","show-hock-app/tests/services/geo-location.jshint.lint-test.js","show-hock-app/tests/services/get-user-calendars.jshint.lint-test.js","show-hock-app/tests/services/save-user-location.jshint.lint-test.js","show-hock-app/tests/services/upcoming-event-artist.jshint.lint-test.js","show-hock-app/tests/services/user-location-setting.jshint.lint-test.js","show-hock-app/tests/storages/auth.jshint.lint-test.js","show-hock-app/tests/test-helper.js","show-hock-app/tests/test-helper.jshint.lint-test.js","show-hock-app/tests/transitions.jshint.lint-test.js","show-hock-app/tests/unit/adapters/application-test.js","show-hock-app/tests/unit/adapters/application-test.jshint.lint-test.js","show-hock-app/tests/unit/adapters/artist-search-test.js","show-hock-app/tests/unit/adapters/artist-search-test.jshint.lint-test.js","show-hock-app/tests/unit/adapters/artist-test.js","show-hock-app/tests/unit/adapters/artist-test.jshint.lint-test.js","show-hock-app/tests/unit/adapters/region-search-test.js","show-hock-app/tests/unit/adapters/region-search-test.jshint.lint-test.js","show-hock-app/tests/unit/adapters/region-test.js","show-hock-app/tests/unit/adapters/region-test.jshint.lint-test.js","show-hock-app/tests/unit/adapters/venue-calendar-test.js","show-hock-app/tests/unit/adapters/venue-calendar-test.jshint.lint-test.js","show-hock-app/tests/unit/adapters/venue-search-test.js","show-hock-app/tests/unit/adapters/venue-search-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/application-test.js","show-hock-app/tests/unit/controllers/application-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/artist/event-test.js","show-hock-app/tests/unit/controllers/artist/event-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/artist/event/concert-test.js","show-hock-app/tests/unit/controllers/artist/event/concert-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/artist/event/results-test.js","show-hock-app/tests/unit/controllers/artist/event/results-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/region/event-test.js","show-hock-app/tests/unit/controllers/region/event-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/region/event/concert-test.js","show-hock-app/tests/unit/controllers/region/event/concert-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/region/event/results-test.js","show-hock-app/tests/unit/controllers/region/event/results-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/search/results-test.js","show-hock-app/tests/unit/controllers/search/results-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/searches/search/results-test.js","show-hock-app/tests/unit/controllers/searches/search/results-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/user/calendar-test.js","show-hock-app/tests/unit/controllers/user/calendar-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/user/change-location-test.js","show-hock-app/tests/unit/controllers/user/change-location-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/venue/event/concert-test.js","show-hock-app/tests/unit/controllers/venue/event/concert-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/venue/event/results-test.js","show-hock-app/tests/unit/controllers/venue/event/results-test.jshint.lint-test.js","show-hock-app/tests/unit/controllers/venue/search/index-test.js","show-hock-app/tests/unit/controllers/venue/search/index-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/arr-last-test.js","show-hock-app/tests/unit/helpers/arr-last-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/eq-test.js","show-hock-app/tests/unit/helpers/eq-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/format-day-test.js","show-hock-app/tests/unit/helpers/format-day-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/format-mon-test.js","show-hock-app/tests/unit/helpers/format-mon-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/format-month-test.js","show-hock-app/tests/unit/helpers/format-month-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/format-time-test.js","show-hock-app/tests/unit/helpers/format-time-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/format-weekday-test.js","show-hock-app/tests/unit/helpers/format-weekday-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/format-year-test.js","show-hock-app/tests/unit/helpers/format-year-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/gt-test.js","show-hock-app/tests/unit/helpers/gt-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/lt-test.js","show-hock-app/tests/unit/helpers/lt-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/neq-test.js","show-hock-app/tests/unit/helpers/neq-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/no-parens-test.js","show-hock-app/tests/unit/helpers/no-parens-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/not-including-curr-test.js","show-hock-app/tests/unit/helpers/not-including-curr-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/prev-curr-test.js","show-hock-app/tests/unit/helpers/prev-curr-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/sum-test.js","show-hock-app/tests/unit/helpers/sum-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/truncate-test.js","show-hock-app/tests/unit/helpers/truncate-test.jshint.lint-test.js","show-hock-app/tests/unit/helpers/upper-case-test.js","show-hock-app/tests/unit/helpers/upper-case-test.jshint.lint-test.js","show-hock-app/tests/unit/initializers/geo-location-test.js","show-hock-app/tests/unit/initializers/geo-location-test.jshint.lint-test.js","show-hock-app/tests/unit/mixins/reset-scroll-test.js","show-hock-app/tests/unit/mixins/reset-scroll-test.jshint.lint-test.js","show-hock-app/tests/unit/models/calendar-test.js","show-hock-app/tests/unit/models/calendar-test.jshint.lint-test.js","show-hock-app/tests/unit/models/concert-test.js","show-hock-app/tests/unit/models/concert-test.jshint.lint-test.js","show-hock-app/tests/unit/models/event-test.js","show-hock-app/tests/unit/models/event-test.jshint.lint-test.js","show-hock-app/tests/unit/models/location-geo-test.js","show-hock-app/tests/unit/models/location-geo-test.jshint.lint-test.js","show-hock-app/tests/unit/models/location-test.js","show-hock-app/tests/unit/models/location-test.jshint.lint-test.js","show-hock-app/tests/unit/models/performer-test.js","show-hock-app/tests/unit/models/performer-test.jshint.lint-test.js","show-hock-app/tests/unit/models/region-test.js","show-hock-app/tests/unit/models/region-test.jshint.lint-test.js","show-hock-app/tests/unit/models/regionsearch-test.js","show-hock-app/tests/unit/models/regionsearch-test.jshint.lint-test.js","show-hock-app/tests/unit/models/show-test.js","show-hock-app/tests/unit/models/show-test.jshint.lint-test.js","show-hock-app/tests/unit/models/similar-artist-test.js","show-hock-app/tests/unit/models/similar-artist-test.jshint.lint-test.js","show-hock-app/tests/unit/models/upcoming-event-test.js","show-hock-app/tests/unit/models/upcoming-event-test.jshint.lint-test.js","show-hock-app/tests/unit/models/venue-calendar-test.js","show-hock-app/tests/unit/models/venue-calendar-test.jshint.lint-test.js","show-hock-app/tests/unit/models/venue-search-test.js","show-hock-app/tests/unit/models/venue-search-test.jshint.lint-test.js","show-hock-app/tests/unit/models/venue-test.js","show-hock-app/tests/unit/models/venue-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/application-test.js","show-hock-app/tests/unit/routes/application-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/artist-test.js","show-hock-app/tests/unit/routes/artist-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/artist/event-test.js","show-hock-app/tests/unit/routes/artist/event-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/artist/event/concert-test.js","show-hock-app/tests/unit/routes/artist/event/concert-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/artist/event/results-test.js","show-hock-app/tests/unit/routes/artist/event/results-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/artist/search-test.js","show-hock-app/tests/unit/routes/artist/search-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/artist/search/index-test.js","show-hock-app/tests/unit/routes/artist/search/index-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/artist/search/results-test.js","show-hock-app/tests/unit/routes/artist/search/results-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/artistsearch/results-test.js","show-hock-app/tests/unit/routes/artistsearch/results-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/change-password-test.js","show-hock-app/tests/unit/routes/change-password-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/concert/event-test.js","show-hock-app/tests/unit/routes/concert/event-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/concert/event/results-test.js","show-hock-app/tests/unit/routes/concert/event/results-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/event/event-test.js","show-hock-app/tests/unit/routes/event/event-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/index-test.js","show-hock-app/tests/unit/routes/index-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/region-test.js","show-hock-app/tests/unit/routes/region-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/region/event-test.js","show-hock-app/tests/unit/routes/region/event-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/region/event/concert-test.js","show-hock-app/tests/unit/routes/region/event/concert-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/region/event/results-test.js","show-hock-app/tests/unit/routes/region/event/results-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/region/search-test.js","show-hock-app/tests/unit/routes/region/search-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/region/search/index-test.js","show-hock-app/tests/unit/routes/region/search/index-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/region/search/results-test.js","show-hock-app/tests/unit/routes/region/search/results-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/regionsearch-test.js","show-hock-app/tests/unit/routes/regionsearch-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/regionsearch/results-test.js","show-hock-app/tests/unit/routes/regionsearch/results-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/searches-test.js","show-hock-app/tests/unit/routes/searches-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/searches/search-test.js","show-hock-app/tests/unit/routes/searches/search-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/searches/search/results-test.js","show-hock-app/tests/unit/routes/searches/search/results-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/sign-in-test.js","show-hock-app/tests/unit/routes/sign-in-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/sign-up-test.js","show-hock-app/tests/unit/routes/sign-up-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/sign-up/index-test.js","show-hock-app/tests/unit/routes/sign-up/index-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/sign-up/new-test.js","show-hock-app/tests/unit/routes/sign-up/new-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/user-test.js","show-hock-app/tests/unit/routes/user-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/user/calendar-test.js","show-hock-app/tests/unit/routes/user/calendar-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/user/change-location-test.js","show-hock-app/tests/unit/routes/user/change-location-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/user/change-location/confirm-test.js","show-hock-app/tests/unit/routes/user/change-location/confirm-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/user/change-location/results-test.js","show-hock-app/tests/unit/routes/user/change-location/results-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/venue-test.js","show-hock-app/tests/unit/routes/venue-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/venue/event-test.js","show-hock-app/tests/unit/routes/venue/event-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/venue/event/concert-test.js","show-hock-app/tests/unit/routes/venue/event/concert-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/venue/event/results-test.js","show-hock-app/tests/unit/routes/venue/event/results-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/venue/search-test.js","show-hock-app/tests/unit/routes/venue/search-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/venue/search/index-test.js","show-hock-app/tests/unit/routes/venue/search/index-test.jshint.lint-test.js","show-hock-app/tests/unit/routes/venue/search/results-test.js","show-hock-app/tests/unit/routes/venue/search/results-test.jshint.lint-test.js","show-hock-app/tests/unit/serializers/application-test.js","show-hock-app/tests/unit/serializers/application-test.jshint.lint-test.js","show-hock-app/tests/unit/serializers/artistsearch-test.js","show-hock-app/tests/unit/serializers/artistsearch-test.jshint.lint-test.js","show-hock-app/tests/unit/serializers/calendar-test.js","show-hock-app/tests/unit/serializers/calendar-test.jshint.lint-test.js","show-hock-app/tests/unit/serializers/location-test.js","show-hock-app/tests/unit/serializers/location-test.jshint.lint-test.js","show-hock-app/tests/unit/serializers/region-test.js","show-hock-app/tests/unit/serializers/region-test.jshint.lint-test.js","show-hock-app/tests/unit/serializers/show-test.js","show-hock-app/tests/unit/serializers/show-test.jshint.lint-test.js","show-hock-app/tests/unit/serializers/user-test.js","show-hock-app/tests/unit/serializers/user-test.jshint.lint-test.js","show-hock-app/tests/unit/services/access-artist-name-test.js","show-hock-app/tests/unit/services/access-artist-name-test.jshint.lint-test.js","show-hock-app/tests/unit/services/access-artist-params-test.js","show-hock-app/tests/unit/services/access-artist-params-test.jshint.lint-test.js","show-hock-app/tests/unit/services/access-artist-show-count-test.js","show-hock-app/tests/unit/services/access-artist-show-count-test.jshint.lint-test.js","show-hock-app/tests/unit/services/access-child-data-test.js","show-hock-app/tests/unit/services/access-child-data-test.jshint.lint-test.js","show-hock-app/tests/unit/services/access-region-obj-test.js","show-hock-app/tests/unit/services/access-region-obj-test.jshint.lint-test.js","show-hock-app/tests/unit/services/access-venue-name-test.js","show-hock-app/tests/unit/services/access-venue-name-test.jshint.lint-test.js","show-hock-app/tests/unit/services/ajax-test.js","show-hock-app/tests/unit/services/ajax-test.jshint.lint-test.js","show-hock-app/tests/unit/services/auth-test.js","show-hock-app/tests/unit/services/auth-test.jshint.lint-test.js","show-hock-app/tests/unit/services/geo-location-test.js","show-hock-app/tests/unit/services/geo-location-test.jshint.lint-test.js","show-hock-app/tests/unit/services/get-user-calendars-test.js","show-hock-app/tests/unit/services/get-user-calendars-test.jshint.lint-test.js","show-hock-app/tests/unit/services/save-user-location-test.js","show-hock-app/tests/unit/services/save-user-location-test.jshint.lint-test.js","show-hock-app/tests/unit/services/upcoming-event-artist-test.js","show-hock-app/tests/unit/services/upcoming-event-artist-test.jshint.lint-test.js","show-hock-app/tests/unit/services/user-location-setting-test.js","show-hock-app/tests/unit/services/user-location-setting-test.jshint.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('show-hock-app/tests/adapters/application.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/adapters/artist-search.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/artist-search.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/artist-search.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/adapters/artist.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/artist.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/artist.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/adapters/region-search.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/region-search.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/region-search.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/adapters/region.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/region.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/region.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/adapters/venue-calendar.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/venue-calendar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/venue-calendar.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/adapters/venue-search.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/venue-search.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/venue-search.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/breakpoints.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | breakpoints.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'breakpoints.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/all-search-detail.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/all-search-detail.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/all-search-detail.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/all-search.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/all-search.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/all-search.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/artist-date.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/artist-date.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/artist-date.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/artist-detail.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/artist-detail.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/artist-detail.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/artist-info.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/artist-info.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/artist-info.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/artist-list.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/artist-list.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/artist-list.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/artist-search-detail.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/artist-search-detail.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/artist-search-detail.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/button-to-concert.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/button-to-concert.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/button-to-concert.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/button-to-region.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/button-to-region.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/button-to-region.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/button-track-event.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/button-track-event.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/button-track-event.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/button-untrack-event.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/button-untrack-event.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/button-untrack-event.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/change-location.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/change-location.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/change-location.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/change-password-form.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/change-password-form.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/change-password-form.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/concert-also-featuring.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/concert-also-featuring.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/concert-also-featuring.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/concert-featuring-artist.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/concert-featuring-artist.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/concert-featuring-artist.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/concert-location-map.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/concert-location-map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/concert-location-map.js should pass jshint.\\ncomponents/concert-location-map.js: line 12, col 22, \\'google\\' is not defined.\\ncomponents/concert-location-map.js: line 13, col 16, \\'google\\' is not defined.\\n\\n2 errors');\n  });\n});","define('show-hock-app/tests/components/concert-venue-details.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/concert-venue-details.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/concert-venue-details.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/date-range-picker.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/date-range-picker.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/date-range-picker.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/email-input.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/email-input.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/email-input.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/event-carousel-outer.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/event-carousel-outer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/event-carousel-outer.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/events-carousel.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/events-carousel.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/events-carousel.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/festival-artist-list.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/festival-artist-list.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/festival-artist-list.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/landing-page-search-menu.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/landing-page-search-menu.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/landing-page-search-menu.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/list-every-artist.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/list-every-artist.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/list-every-artist.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/location-map.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/location-map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/location-map.js should pass jshint.\\ncomponents/location-map.js: line 10, col 22, \\'google\\' is not defined.\\ncomponents/location-map.js: line 11, col 16, \\'google\\' is not defined.\\n\\n2 errors');\n  });\n});","define('show-hock-app/tests/components/nav-link-to.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/nav-link-to.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/nav-link-to.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/navbar-location.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/navbar-location.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/navbar-location.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/nearby-regions.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/nearby-regions.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/nearby-regions.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/pagination-bar.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/pagination-bar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/pagination-bar.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/password-confirmation-input.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/password-confirmation-input.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/password-confirmation-input.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/password-input.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/password-input.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/password-input.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/past-events.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/past-events.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/past-events.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/popular-artists.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/popular-artists.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/popular-artists.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/purchase-tickets.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/purchase-tickets.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/purchase-tickets.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/region-detail.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/region-detail.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/region-detail.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/region-search-detail.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/region-search-detail.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/region-search-detail.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/search-input-dropdown.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-input-dropdown.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-input-dropdown.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/search-input-main.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-input-main.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-input-main.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/search-input-page-wrapper.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-input-page-wrapper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-input-page-wrapper.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/search-input-page.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-input-page.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-input-page.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/search-input.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-input.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-input.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/search-options-menu-mobile.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-options-menu-mobile.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-options-menu-mobile.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/search-options-menu.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-options-menu.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-options-menu.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/search-popular.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-popular.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-popular.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/search-results-artist.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-results-artist.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-results-artist.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/search-results-region.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-results-region.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-results-region.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/search-results-venue.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-results-venue.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-results-venue.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/search-title.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/search-title.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/search-title.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/sign-in-form.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/sign-in-form.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sign-in-form.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/sign-up-form.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/sign-up-form.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sign-up-form.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/similar-artists.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/similar-artists.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/similar-artists.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/tracking-button-calendar.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/tracking-button-calendar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/tracking-button-calendar.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/tracking-buttons-concert.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/tracking-buttons-concert.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/tracking-buttons-concert.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/upcoming-events.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/upcoming-events.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/upcoming-events.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/upcoming-region-events.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/upcoming-region-events.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/upcoming-region-events.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/upcoming-venue-events.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/upcoming-venue-events.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/upcoming-venue-events.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/user-calendar-detail.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/user-calendar-detail.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/user-calendar-detail.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/user-search-region.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/user-search-region.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/user-search-region.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/venue-detail.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/venue-detail.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/venue-detail.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/components/venue-search-detail.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/venue-search-detail.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/venue-search-detail.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/application.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/artist/event.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/artist/event.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/artist/event.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/artist/event/concert.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/artist/event/concert.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/artist/event/concert.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/artist/event/results.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/artist/event/results.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/artist/event/results.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/region/event.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/region/event.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/region/event.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/region/event/concert.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/region/event/concert.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/region/event/concert.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/region/event/results.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/region/event/results.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/region/event/results.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/searches/search/results.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/searches/search/results.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/searches/search/results.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/user/calendar.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/user/calendar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/user/calendar.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/user/change-location.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/user/change-location.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/user/change-location.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/venue/event/concert.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/venue/event/concert.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/venue/event/concert.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/venue/event/results.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/venue/event/results.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/venue/event/results.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/controllers/venue/search/index.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/venue/search/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/venue/search/index.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/arr-last.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/arr-last.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/arr-last.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('show-hock-app/tests/helpers/destroy-app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/ember-cli-g-maps/register-async-helpers', ['exports', 'ember', 'show-hock-app/tests/helpers/ember-cli-g-maps/select-autocomplete-place-helper', 'show-hock-app/tests/helpers/ember-cli-g-maps/wait-for-google-map-helper', 'show-hock-app/tests/helpers/ember-cli-g-maps/wait-for-geocode-requests-helper', 'show-hock-app/tests/helpers/ember-cli-g-maps/stub-geocode-requests-helper'], function (exports, _ember, _showHockAppTestsHelpersEmberCliGMapsSelectAutocompletePlaceHelper, _showHockAppTestsHelpersEmberCliGMapsWaitForGoogleMapHelper, _showHockAppTestsHelpersEmberCliGMapsWaitForGeocodeRequestsHelper, _showHockAppTestsHelpersEmberCliGMapsStubGeocodeRequestsHelper) {\n  exports['default'] = function () {\n    _ember['default'].Test.registerAsyncHelper('selectPlace', function () {\n      _ember['default'].Logger.warn('Please replace disabled helper \"selectPlace\" with \"selectAutocompletePlace\" helper.\\nUsage details here: http://http://matt-jensen.github.io/ember-cli-g-maps/#/place-autocomplete/index');\n    });\n    _ember['default'].Test.registerAsyncHelper('selectAutocompletePlace', _showHockAppTestsHelpersEmberCliGMapsSelectAutocompletePlaceHelper['default']);\n    _ember['default'].Test.registerAsyncHelper('waitForGoogleMap', _showHockAppTestsHelpersEmberCliGMapsWaitForGoogleMapHelper['default']);\n    _ember['default'].Test.registerAsyncHelper('waitForGeocodeRequests', _showHockAppTestsHelpersEmberCliGMapsWaitForGeocodeRequestsHelper['default']);\n    _ember['default'].Test.registerAsyncHelper('stubGeocodeRequests', _showHockAppTestsHelpersEmberCliGMapsStubGeocodeRequestsHelper['default']);\n  };\n});","define('show-hock-app/tests/helpers/ember-cli-g-maps/select-autocomplete-place-helper', ['exports', 'ember'], function (exports, _ember) {\n  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\n  exports.longPollExternalElement = longPollExternalElement;\n  var $ = _ember['default'].$;\n  var assert = _ember['default'].assert;\n\n  var GAUTOCOMPLETE_CLASS = 'g-autocomplete';\n  var GOOGLE_AUTOCOMPLETE_RESULTS = '.pac-container .pac-item';\n\n  exports['default'] = function (app) {\n    var requestedResult = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n    var selector = arguments.length <= 2 || arguments[2] === undefined ? '.' + GAUTOCOMPLETE_CLASS : arguments[2];\n\n    return new _ember['default'].Test.promise(function (resolve, reject) {\n\n      // User only provided selector argument\n      if (typeof requestedResult === 'string') {\n        selector = requestedResult;\n        requestedResult = 0;\n      }\n\n      longPollExternalElement(GOOGLE_AUTOCOMPLETE_RESULTS).then(function (autocompletePlaces) {\n        var textResults = autocompletePlaces.map(function (i, el) {\n          return $(el).text();\n        });\n\n        var _app$testHelpers$find = app.testHelpers.find(selector);\n\n        var _app$testHelpers$find2 = _slicedToArray(_app$testHelpers$find, 1);\n\n        var input = _app$testHelpers$find2[0];\n\n        assert('No g-autocomplete component found for selector: ' + selector, input && $(input).hasClass(GAUTOCOMPLETE_CLASS));\n\n        var targetResult = 0;\n\n        /*\n         * Set target to requested result if it exists\n         */\n        if (requestedResult > 0 && requestedResult <= textResults.length - 1) {\n          targetResult = parseInt(requestedResult, 10);\n        }\n\n        /*\n         * Keydown to requested result (40 = down arrow)\n         */\n        for (var i = 0; i <= targetResult; i++) {\n          google.maps.event.trigger(input, 'keydown', { keyCode: 40 });\n        }\n\n        // Select active result (13 = Enter)\n        google.maps.event.trigger(input, 'keydown', { keyCode: 13 });\n        _ember['default'].run.later(function () {\n          return resolve(textResults[targetResult]);\n        }, 300);\n      }, reject);\n    });\n  };\n\n  function longPollExternalElement(selector) {\n    return new _ember['default'].RSVP.Promise(function (resolve, reject) {\n      var pollAgain = (function () {\n        var counter = 0;\n\n        return function () {\n          /*\n           * NOTE searching for elements potentially outside of #ember-testing container\n           */\n          var results = $(selector);\n\n          if (results.length) {\n            return resolve(results);\n          }\n\n          if (counter > 5) {\n            return reject();\n          }\n\n          counter++;\n          _ember['default'].run.later(pollAgain, 300);\n        };\n      })();\n\n      pollAgain();\n    });\n  }\n\n  ;\n});","define(\"show-hock-app/tests/helpers/ember-cli-g-maps/setup-test\", [\"exports\"], function (exports) {\n  exports[\"default\"] = function () {};\n\n  // TODO remove file @ v1\n});","define('show-hock-app/tests/helpers/ember-cli-g-maps/stub-geocode-requests-helper', ['exports', 'rsvp', 'ember', 'ember-owner/get', 'ember-metal/utils', 'ember-runloop'], function (exports, _rsvp, _ember, _emberOwnerGet, _emberMetalUtils, _emberRunloop) {\n  exports.toPlaceResult = toPlaceResult;\n  var Logger = _ember['default'].Logger;\n\n  var ORIGINAL_GEOCODE = GMaps.prototype.geocode;\n  var IS_PHANTOMJS_ENV = typeof window === 'object' && window.hasOwnProperty('_phantom');\n\n  exports['default'] = function (app) {\n    var config = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var onlyPhantomJS = Boolean(config.onlyPhantomJS);\n\n    // Abandon if only stubbing phantomJS\n    if (onlyPhantomJS && IS_PHANTOMJS_ENV === false) {\n      return;\n    }\n\n    (0, _emberMetalUtils.assert)('A results array is required', config.results && config.results instanceof Array && config.results.length);\n\n    var stubs = undefined;\n    if (config.results[0] instanceof Array) {\n      // Clone 2 demensional array\n      stubs = config.results.map(function (results) {\n        return results.map(toPlaceResult);\n      });\n    } else {\n      // Clone 1 demensional into 2 demensional array\n      stubs = [config.results.map(toPlaceResult)];\n    }\n\n    (0, _emberMetalUtils.assert)('Geocode stubbed requests are still unresolved', ORIGINAL_GEOCODE === GMaps.prototype.geocode);\n\n    var stubIndex = 0;\n\n    /*\n     * Stub GMaps geocode\n     */\n    GMaps.prototype.geocode = function geocodeStub(_ref) {\n      var callback = _ref.callback;\n\n      (0, _emberRunloop['default'])(function () {\n        callback(stubs[stubIndex], 'OK');\n        stubIndex += 1;\n\n        if (stubIndex >= stubs.length) {\n          GMaps.prototype.geocode = ORIGINAL_GEOCODE;\n        }\n      });\n    };\n  };\n\n  function toPlaceResult(result) {\n    var clone = (0, _emberMetalUtils.copy)(result, true);\n    clone.geometry = clone.geometry || {};\n    clone.geometry.location = clone.geometry.location || {};\n\n    if (clone.hasOwnProperty('lat') && typeof clone.geometry.location.lat !== 'function') {\n      clone.geometry.location.lat = function () {\n        return clone.lat;\n      };\n    }\n\n    if (clone.hasOwnProperty('lng') && typeof clone.geometry.location.lng !== 'function') {\n      clone.geometry.location.lng = function () {\n        return clone.lng;\n      };\n    }\n\n    if (clone.hasOwnProperty('address') && !clone.formatted_address) {\n      clone.formatted_address = clone.address;\n    }\n\n    return clone;\n  }\n});","define('show-hock-app/tests/helpers/ember-cli-g-maps/wait-for-geocode-requests-helper', ['exports', 'rsvp', 'ember', 'ember-owner/get', 'ember-metal/utils'], function (exports, _rsvp, _ember, _emberOwnerGet, _emberMetalUtils) {\n  var Logger = _ember['default'].Logger;\n\n  exports['default'] = function (app) {\n    var container = (0, _emberOwnerGet['default'])(app) || app.__container__;\n    (0, _emberMetalUtils.assert)('failed to recover application container', container);\n\n    var gMap = container.lookup && container.lookup('service:gMap');\n    (0, _emberMetalUtils.assert)('gMap service lookup failed', gMap);\n\n    return new _ember['default'].Test.promise(function (resolve, reject) {\n      _ember['default'].Test.adapter.asyncStart();\n\n      var queue = gMap._geocodeQueue || [];\n\n      if (!queue.length) {\n        Logger.warn('Geocode request queue was not found, or is currently empty');\n      }\n\n      return _rsvp['default'].Promise.all(queue).then(function () {\n        _ember['default'].run.scheduleOnce('afterRender', null, resolve);\n        _ember['default'].Test.adapter.asyncEnd();\n      })['catch'](function () {\n        reject();\n        _ember['default'].Test.adapter.asyncEnd();\n      });\n    });\n  };\n});","define('show-hock-app/tests/helpers/ember-cli-g-maps/wait-for-google-map-helper', ['exports', 'ember', 'ember-cli-g-maps/utils/load-google-maps'], function (exports, _ember, _emberCliGMapsUtilsLoadGoogleMaps) {\n  var $ = _ember['default'].$;\n  var assert = _ember['default'].assert;\n\n  var EMBER_CLI_GMAPS_SELECTOR = '.ember-cli-g-map';\n\n  exports['default'] = function (app) {\n    var selector = arguments.length <= 1 || arguments[1] === undefined ? EMBER_CLI_GMAPS_SELECTOR : arguments[1];\n\n    return new _ember['default'].Test.promise(function (resolve, reject) {\n      _ember['default'].Test.adapter.asyncStart();\n\n      (0, _emberCliGMapsUtilsLoadGoogleMaps['default'])().then(function () {\n        _ember['default'].run.scheduleOnce('afterRender', function () {\n          var $map = $(selector);\n          assert('No g-maps component found at selector: ' + selector, !$map.length || !$map.eq(0).hasClass(EMBER_CLI_GMAPS_SELECTOR));\n\n          google.maps.event.addListenerOnce($map.get(0).__GOOGLE_MAP__, 'tilesloaded', function () {\n            _ember['default'].run(resolve);\n            _ember['default'].Test.adapter.asyncEnd();\n          });\n        });\n      })['catch'](function () {\n        reject();\n        _ember['default'].Test.adapter.asyncEnd();\n      });\n    });\n  };\n});","define('show-hock-app/tests/helpers/eq.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/eq.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/eq.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/flash-message', ['exports', 'ember-cli-flash/flash/object'], function (exports, _emberCliFlashFlashObject) {\n\n  _emberCliFlashFlashObject['default'].reopen({ init: function init() {} });\n});","define('show-hock-app/tests/helpers/flash-message.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/flash-message.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/flash-message.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/format-day.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/format-day.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/format-day.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/format-mon.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/format-mon.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/format-mon.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/format-month.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/format-month.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/format-month.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/format-time.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/format-time.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/format-time.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/format-weekday.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/format-weekday.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/format-weekday.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/format-year.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/format-year.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/format-year.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/gt.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/gt.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/gt.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/lt.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/lt.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/lt.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'show-hock-app/tests/helpers/start-app', 'show-hock-app/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _showHockAppTestsHelpersStartApp, _showHockAppTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _showHockAppTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _showHockAppTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('show-hock-app/tests/helpers/module-for-acceptance.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/neq.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/neq.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/neq.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/no-parens.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/no-parens.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/no-parens.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/not-including-curr.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/not-including-curr.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/not-including-curr.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/prev-curr.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/prev-curr.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/prev-curr.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/resolver', ['exports', 'show-hock-app/resolver', 'show-hock-app/config/environment'], function (exports, _showHockAppResolver, _showHockAppConfigEnvironment) {\n\n  var resolver = _showHockAppResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _showHockAppConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _showHockAppConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('show-hock-app/tests/helpers/resolver.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/responsive', ['exports', 'ember', 'ember-responsive/media'], function (exports, _ember, _emberResponsiveMedia) {\n  exports.setBreakpointForIntegrationTest = setBreakpointForIntegrationTest;\n  var getOwner = _ember['default'].getOwner;\n  var classify = _ember['default'].String.classify;\n\n  _emberResponsiveMedia['default'].reopen({\n    // Change this if you want a different default breakpoint in tests.\n    _defaultBreakpoint: 'desktop',\n\n    _breakpointArr: _ember['default'].computed('breakpoints', function () {\n      return Object.keys(this.get('breakpoints')) || _ember['default'].A([]);\n    }),\n\n    _forceSetBreakpoint: function _forceSetBreakpoint(breakpoint) {\n      var found = false;\n\n      var props = {};\n      this.get('_breakpointArr').forEach(function (bp) {\n        var val = bp === breakpoint;\n        if (val) {\n          found = true;\n        }\n\n        props['is' + classify(bp)] = val;\n      });\n\n      if (found) {\n        this.setProperties(props);\n      } else {\n        throw new Error('You tried to set the breakpoint to ' + breakpoint + ', which is not in your app/breakpoint.js file.');\n      }\n    },\n\n    match: function match() {}, // do not set up listeners in test\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this._forceSetBreakpoint(this.get('_defaultBreakpoint'));\n    }\n  });\n\n  exports['default'] = _ember['default'].Test.registerAsyncHelper('setBreakpoint', function (app, breakpoint) {\n    // this should use getOwner once that's supported\n    var mediaService = app.__deprecatedInstance__.lookup('service:media');\n    mediaService._forceSetBreakpoint(breakpoint);\n  });\n\n  function setBreakpointForIntegrationTest(container, breakpoint) {\n    var mediaService = getOwner(container).lookup('service:media');\n    mediaService._forceSetBreakpoint(breakpoint);\n    container.set('media', mediaService);\n\n    return mediaService;\n  }\n});","define('show-hock-app/tests/helpers/responsive.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/responsive.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/responsive.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/start-app', ['exports', 'ember', 'show-hock-app/app', 'show-hock-app/config/environment'], function (exports, _ember, _showHockAppApp, _showHockAppConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    // use defaults, but you can override\n    var attributes = _ember['default'].assign({}, _showHockAppConfigEnvironment['default'].APP, attrs);\n\n    _ember['default'].run(function () {\n      application = _showHockAppApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('show-hock-app/tests/helpers/start-app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/sum.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/sum.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/sum.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/truncate.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/truncate.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/truncate.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/helpers/upper-case.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/upper-case.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/upper-case.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/initializers/geo-location.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | initializers/geo-location.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/geo-location.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/initializers/responsive.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | initializers/responsive.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/responsive.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/initializers/text-field.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | initializers/text-field.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/text-field.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/all-search-detail-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('all-search-detail', 'Integration | Component | all search detail', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '3qOE/OPr',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"all-search-detail\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'wpCf+4IW',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"all-search-detail\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/all-search-detail-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/all-search-detail-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/all-search-detail-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/all-search-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('all-search', 'Integration | Component | all search', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'E77aEkS8',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"all-search\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'KE691ojK',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"all-search\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/all-search-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/all-search-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/all-search-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/artist-date-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('artist-date', 'Integration | Component | artist date', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'sXWrfp+O',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"artist-date\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'wDEbfKVC',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"artist-date\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/artist-date-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/artist-date-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/artist-date-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/artist-detail-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('artist-detail', 'Integration | Component | artist detail', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '8V+uEQzr',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"artist-detail\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '9MErbrB2',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"artist-detail\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/artist-detail-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/artist-detail-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/artist-detail-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/artist-info-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('artist-info', 'Integration | Component | artist info', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'Vp70nQFU',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"artist-info\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'Yja2A2o0',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"artist-info\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/artist-info-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/artist-info-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/artist-info-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/artist-list-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('artist-list', 'Integration | Component | artist list', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'LcFmCz91',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"artist-list\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'nF9BlpR2',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"artist-list\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/artist-list-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/artist-list-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/artist-list-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/artist-search-detail-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('artist-search-detail', 'Integration | Component | artist search detail', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'Wk2oDRPR',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"artist-search-detail\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '1VI/V/MI',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"artist-search-detail\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/artist-search-detail-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/artist-search-detail-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/artist-search-detail-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/button-to-concert-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('button-to-concert', 'Integration | Component | button to concert', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '8XTHF+MM',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"button-to-concert\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'xNg1uT4G',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"button-to-concert\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/button-to-concert-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/button-to-concert-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/button-to-concert-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/button-to-region-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('button-to-region', 'Integration | Component | button to region', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '5oUNJPL3',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"button-to-region\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'OSOwEmAf',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"button-to-region\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/button-to-region-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/button-to-region-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/button-to-region-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/button-track-event-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('button-track-event', 'Integration | Component | button track event', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'dhRSIPZ5',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"button-track-event\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '4wk2PhRT',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"button-track-event\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/button-track-event-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/button-track-event-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/button-track-event-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/button-untrack-event-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('button-untrack-event', 'Integration | Component | button untrack event', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'b/IjeZUO',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"button-untrack-event\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'nlIR83TQ',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"button-untrack-event\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/button-untrack-event-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/button-untrack-event-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/button-untrack-event-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/change-location-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('change-location', 'Integration | Component | change location', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'VA5nXfCI',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"change-location\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '8jco1FUs',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"change-location\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/change-location-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/change-location-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/change-location-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/change-password-form-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('change-password-form', 'Integration | Component | change password form', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'vzv/UbXi',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"change-password-form\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'W+lopJXu',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"change-password-form\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/change-password-form-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/change-password-form-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/change-password-form-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/concert-also-featuring-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('concert-also-featuring', 'Integration | Component | concert also featuring', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '23y0YpWr',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"concert-also-featuring\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'Cv5YQFiG',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"concert-also-featuring\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/concert-also-featuring-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/concert-also-featuring-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/concert-also-featuring-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/concert-featuring-artist-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('concert-featuring-artist', 'Integration | Component | concert featuring artist', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'EBZbv9Dn',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"concert-featuring-artist\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'NpoWpCN8',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"concert-featuring-artist\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/concert-featuring-artist-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/concert-featuring-artist-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/concert-featuring-artist-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/concert-location-map-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('concert-location-map', 'Integration | Component | concert location map', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'wSz4f35i',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"concert-location-map\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '6WlIiyyk',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"concert-location-map\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/concert-location-map-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/concert-location-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/concert-location-map-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/concert-venue-details-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('concert-venue-details', 'Integration | Component | concert venue details', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '4+b9pan8',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"concert-venue-details\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '3GQybxLX',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"concert-venue-details\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/concert-venue-details-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/concert-venue-details-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/concert-venue-details-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/date-range-picker-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('date-range-picker', 'Integration | Component | date range picker', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'q1aJvYA2',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"date-range-picker\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'cbZTSO3W',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"date-range-picker\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/date-range-picker-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/date-range-picker-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/date-range-picker-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/email-input-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('email-input', 'Integration | Component | email input', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '6ZlF6XfM',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"email-input\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'YM0cFao3',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"email-input\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/email-input-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/email-input-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/email-input-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/event-carousel-outer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('event-carousel-outer', 'Integration | Component | event carousel outer', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'xextrb73',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"event-carousel-outer\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'E7qdc/GY',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"event-carousel-outer\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/event-carousel-outer-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/event-carousel-outer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/event-carousel-outer-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/festival-artist-list-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('festival-artist-list', 'Integration | Component | festival artist list', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'u1OmIffY',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"festival-artist-list\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'ekEP8FcL',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"festival-artist-list\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/festival-artist-list-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/festival-artist-list-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/festival-artist-list-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/index-carousel-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('index-carousel', 'Integration | Component | index carousel', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'jAoO3Z81',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"index-carousel\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'bA5dFmQ8',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"index-carousel\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/index-carousel-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/index-carousel-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/index-carousel-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/landing-page-search-menu-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('landing-page-search-menu', 'Integration | Component | landing page search menu', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'zVXdXPO/',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"landing-page-search-menu\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'ibso3IKW',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"landing-page-search-menu\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/landing-page-search-menu-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/landing-page-search-menu-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/landing-page-search-menu-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/list-every-artist-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('list-every-artist', 'Integration | Component | list every artist', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'VTzoxbt9',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"list-every-artist\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'SOqtgeCt',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"list-every-artist\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/list-every-artist-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/list-every-artist-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/list-every-artist-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/location-map-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('location-map', 'Integration | Component | location map', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'qSOVDFKS',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"location-map\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'uouVjdDS',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"location-map\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/location-map-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/location-map-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/location-map-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/nav-link-to-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('nav-link-to', 'Integration | Component | nav link to', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'XihGobDw',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"nav-link-to\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'MntjeuzC',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"nav-link-to\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/nav-link-to-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/nav-link-to-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/nav-link-to-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/navbar-location-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('navbar-location', 'Integration | Component | navbar location', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '03I249d4',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"navbar-location\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'z1tgHj6B',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"navbar-location\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/navbar-location-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/navbar-location-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/navbar-location-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/nearby-regions-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('nearby-regions', 'Integration | Component | nearby regions', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '0CkS6tvP',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"nearby-regions\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '4dUd2p3X',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"nearby-regions\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/nearby-regions-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/nearby-regions-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/nearby-regions-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/pagination-bar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('pagination-bar', 'Integration | Component | pagination bar', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'kLYcrV4l',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"pagination-bar\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'R+9e5bd9',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"pagination-bar\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/pagination-bar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/pagination-bar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/pagination-bar-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/password-confirmation-input-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('password-confirmation-input', 'Integration | Component | password confirmation input', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'iIL5Yl+z',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"password-confirmation-input\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'tkVExn4c',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"password-confirmation-input\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/password-confirmation-input-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/password-confirmation-input-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/password-confirmation-input-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/password-input-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('password-input', 'Integration | Component | password input', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'qKa4/eNs',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"password-input\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'zLQB4Ctb',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"password-input\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/password-input-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/password-input-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/password-input-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/past-events-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('past-events', 'Integration | Component | past events', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'oQ7sriuQ',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"past-events\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'C+W3VUlD',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"past-events\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/past-events-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/past-events-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/past-events-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/popular-artists-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('popular-artists', 'Integration | Component | popular artists', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'MqQz62e1',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"popular-artists\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'rzR5iTu5',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"popular-artists\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/popular-artists-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/popular-artists-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/popular-artists-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/purchase-tickets-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('purchase-tickets', 'Integration | Component | purchase tickets', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'Jl5E529e',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"purchase-tickets\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'fXawr6wv',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"purchase-tickets\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/purchase-tickets-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/purchase-tickets-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/purchase-tickets-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/region-detail-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('location-detail', 'Integration | Component | location detail', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'H4SvrORV',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"location-detail\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'gcu71mPG',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"location-detail\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/region-detail-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/region-detail-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/region-detail-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/region-search-detail-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('event-search-detail', 'Integration | Component | event search detail', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'kvT7gvzO',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"event-search-detail\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'WZkqtSy3',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"event-search-detail\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/region-search-detail-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/region-search-detail-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/region-search-detail-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/search-input-dropdown-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-input-dropdown', 'Integration | Component | search input dropdown', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'ZkDVGqz/',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"search-input-dropdown\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '3bIPFDcz',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"search-input-dropdown\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/search-input-dropdown-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-input-dropdown-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-input-dropdown-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/search-input-main-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-input-main', 'Integration | Component | search input main', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '5pKB4+KI',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"search-input-main\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'IiS5Vx0l',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"search-input-main\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/search-input-main-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-input-main-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-input-main-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/search-input-page-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-input-page', 'Integration | Component | search input page', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'Is6dro8u',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"search-input-page\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'wx/q1cbG',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"search-input-page\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/search-input-page-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-input-page-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-input-page-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/search-input-page-wrapper-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-input-page-wrapper', 'Integration | Component | search input page wrapper', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'yxJ+Qljk',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"search-input-page-wrapper\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '4wKgnsfT',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"search-input-page-wrapper\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/search-input-page-wrapper-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-input-page-wrapper-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-input-page-wrapper-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/search-input-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-input', 'Integration | Component | search input', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'isUY3ld2',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"search-input\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'xTBYUB6Q',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"search-input\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/search-input-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-input-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-input-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/search-options-menu-mobile-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-options-menu-mobile', 'Integration | Component | search options menu mobile', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'AnFmYk2R',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"search-options-menu-mobile\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '4vbY5Uqf',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"search-options-menu-mobile\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/search-options-menu-mobile-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-options-menu-mobile-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-options-menu-mobile-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/search-options-menu-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-options-menu', 'Integration | Component | search options menu', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'coRkIhPS',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"search-options-menu\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'UeL6OHW2',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"search-options-menu\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/search-options-menu-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-options-menu-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-options-menu-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/search-popular-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-popular', 'Integration | Component | search popular', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'G4trle0L',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"search-popular\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'YKO7+ulu',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"search-popular\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/search-popular-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-popular-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-popular-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/search-results-artist-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-results-artist', 'Integration | Component | search results artist', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'efU3lXC8',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"search-results-artist\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'b97n5ALQ',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"search-results-artist\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/search-results-artist-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-results-artist-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-results-artist-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/search-results-region-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-results-region', 'Integration | Component | search results region', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'ZIOKB6Yh',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"search-results-region\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'KxW71Rux',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"search-results-region\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/search-results-region-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-results-region-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-results-region-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/search-results-venue-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-results-venue', 'Integration | Component | search results venue', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'kwF+K4js',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"search-results-venue\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '5r21BzWo',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"search-results-venue\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/search-results-venue-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-results-venue-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-results-venue-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/search-title-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('search-title', 'Integration | Component | search title', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'Utuvl/55',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"search-title\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'gRbSrqyb',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"search-title\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/search-title-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/search-title-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-title-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/sign-in-form-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('sign-in-form', 'Integration | Component | sign in form', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'iWgfKNlK',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"sign-in-form\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '0kWL1c/7',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"sign-in-form\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/sign-in-form-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/sign-in-form-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sign-in-form-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/sign-up-form-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('sign-up-form', 'Integration | Component | sign up form', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'oWx+CZzU',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"sign-up-form\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '2eGtA79t',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"sign-up-form\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/sign-up-form-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/sign-up-form-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/sign-up-form-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/similar-artists-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('similar-artists', 'Integration | Component | similar artists', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '9Clrtz0d',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"similar-artists\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'OT/N98jd',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"similar-artists\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/similar-artists-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/similar-artists-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/similar-artists-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/tracking-button-calendar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('tracking-button-calendar', 'Integration | Component | tracking button calendar', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'CcBEfA10',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"tracking-button-calendar\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'kXp5pdL1',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"tracking-button-calendar\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/tracking-button-calendar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/tracking-button-calendar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/tracking-button-calendar-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/tracking-buttons-concert-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('tracking-buttons-concert', 'Integration | Component | tracking buttons concert', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'xEuqQRiY',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"tracking-buttons-concert\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'YSIk4Ajy',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"tracking-buttons-concert\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/tracking-buttons-concert-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/tracking-buttons-concert-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/tracking-buttons-concert-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/upcoming-events-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('upcoming-events', 'Integration | Component | upcoming events', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'Q4GPq/c+',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"upcoming-events\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'l3ixtbvX',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"upcoming-events\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/upcoming-events-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/upcoming-events-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/upcoming-events-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/upcoming-region-events-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('upcoming-region-events', 'Integration | Component | upcoming region events', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'yKr29BeF',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"upcoming-region-events\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '1exmsGGv',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"upcoming-region-events\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/upcoming-region-events-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/upcoming-region-events-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/upcoming-region-events-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/upcoming-venue-events-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('upcoming-venue-events', 'Integration | Component | upcoming venue events', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'PwWRJxKK',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"upcoming-venue-events\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'NZMzJ4HE',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"upcoming-venue-events\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/upcoming-venue-events-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/upcoming-venue-events-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/upcoming-venue-events-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/user-calendar-detail-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('user-calendar-detail', 'Integration | Component | user calendar detail', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'F5L+mjkH',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"user-calendar-detail\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'kaM1O8sE',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"user-calendar-detail\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/user-calendar-detail-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/user-calendar-detail-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/user-calendar-detail-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/user-search-region-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('user-search-region', 'Integration | Component | user search region', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'bjTXRrDm',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"user-search-region\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'afytXY7Q',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"user-search-region\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/user-search-region-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/user-search-region-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/user-search-region-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/venue-detail-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('venue-detail', 'Integration | Component | venue detail', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'dFYteRch',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"venue-detail\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'Rx86TX/O',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"venue-detail\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/venue-detail-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/venue-detail-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/venue-detail-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/integration/components/venue-search-detail-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('venue-search-detail', 'Integration | Component | venue search detail', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'OcVkB6Ac',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"venue-search-detail\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '36ofJs2A',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"venue-search-detail\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('show-hock-app/tests/integration/components/venue-search-detail-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/venue-search-detail-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/venue-search-detail-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/mixins/reset-scroll.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | mixins/reset-scroll.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/reset-scroll.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/artist-search.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/artist-search.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/artist-search.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/artist.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/artist.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/artist.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/calendar.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/calendar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/calendar.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/concert.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/concert.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/concert.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/location-geo.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/location-geo.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/location-geo.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/location.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/location.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/location.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/performer.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/performer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/performer.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/region-search.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/region-search.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/region-search.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/region.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/region.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/region.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/show.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/show.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/show.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/similar-artist.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/similar-artist.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/similar-artist.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/upcoming-event.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/upcoming-event.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/upcoming-event.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/user.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/user.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/venue-calendar.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/venue-calendar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/venue-calendar.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/venue-search.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/venue-search.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/venue-search.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/models/venue.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/venue.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/venue.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/resolver.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/router.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/application.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/artist.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/artist.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/artist.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/artist/event.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/artist/event.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/artist/event.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/artist/event/concert.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/artist/event/concert.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/artist/event/concert.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/artist/event/results.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/artist/event/results.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/artist/event/results.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/artist/search.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/artist/search.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/artist/search.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/artist/search/index.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/artist/search/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/artist/search/index.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/artist/search/results.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/artist/search/results.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/artist/search/results.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/change-password.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/change-password.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/change-password.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/index.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/region.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/region.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/region.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/region/event.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/region/event.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/region/event.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/region/event/concert.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/region/event/concert.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/region/event/concert.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/region/event/results.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/region/event/results.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/region/event/results.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/region/search.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/region/search.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/region/search.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/region/search/index.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/region/search/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/region/search/index.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/region/search/results.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/region/search/results.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/region/search/results.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/searches.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/searches.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/searches.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/searches/search.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/searches/search.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/searches/search.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/searches/search/results.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/searches/search/results.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/searches/search/results.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/sign-in.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/sign-in.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/sign-in.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/sign-up.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/sign-up.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/sign-up.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/sign-up/index.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/sign-up/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/sign-up/index.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/sign-up/new.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/sign-up/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/sign-up/new.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/user.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/user.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/user/calendar.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/user/calendar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/user/calendar.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/user/change-location.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/user/change-location.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/user/change-location.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/user/change-location/confirm.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/user/change-location/confirm.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/user/change-location/confirm.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/user/change-location/results.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/user/change-location/results.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/user/change-location/results.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/venue.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/venue.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/venue.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/venue/event.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/venue/event.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/venue/event.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/venue/event/concert.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/venue/event/concert.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/venue/event/concert.js should pass jshint.\\nroutes/venue/event/concert.js: line 2, col 8, \\'moment\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('show-hock-app/tests/routes/venue/event/results.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/venue/event/results.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/venue/event/results.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/venue/search.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/venue/search.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/venue/search.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/venue/search/index.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/venue/search/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/venue/search/index.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/routes/venue/search/results.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/venue/search/results.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/venue/search/results.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/serializers/application.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | serializers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/serializers/calendar.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | serializers/calendar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/calendar.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/serializers/location.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | serializers/location.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/location.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/serializers/region-search.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | serializers/region-search.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/region-search.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/serializers/region.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | serializers/region.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/region.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/serializers/show.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | serializers/show.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/show.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/serializers/user.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | serializers/user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/user.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/access-artist-data.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/access-artist-data.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/access-artist-data.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/access-artist-name.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/access-artist-name.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/access-artist-name.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/access-artist-params.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/access-artist-params.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/access-artist-params.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/access-artist-show-count.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/access-artist-show-count.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/access-artist-show-count.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/access-region-obj.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/access-region-obj.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/access-region-obj.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/access-venue-name.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/access-venue-name.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/access-venue-name.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/ajax.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/ajax.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/ajax.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/auth.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/auth.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/auth.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/geo-location.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/geo-location.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/geo-location.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/get-user-calendars.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/get-user-calendars.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/get-user-calendars.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/save-user-location.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/save-user-location.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/save-user-location.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/upcoming-event-artist.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/upcoming-event-artist.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/upcoming-event-artist.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/services/user-location-setting.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/user-location-setting.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/user-location-setting.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/storages/auth.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | storages/auth.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'storages/auth.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/test-helper', ['exports', 'show-hock-app/tests/helpers/resolver', 'show-hock-app/tests/helpers/flash-message', 'show-hock-app/tests/helpers/responsive', 'ember-qunit'], function (exports, _showHockAppTestsHelpersResolver, _showHockAppTestsHelpersFlashMessage, _showHockAppTestsHelpersResponsive, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_showHockAppTestsHelpersResolver['default']);\n});","define('show-hock-app/tests/test-helper.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/transitions.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | transitions.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transitions.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/adapters/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('show-hock-app/tests/unit/adapters/application-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/adapters/artist-search-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:artist-search', 'Unit | Adapter | artist search', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('show-hock-app/tests/unit/adapters/artist-search-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/artist-search-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/artist-search-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/adapters/artist-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:artist', 'Unit | Adapter | artist', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('show-hock-app/tests/unit/adapters/artist-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/artist-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/artist-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/adapters/region-search-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:region-search', 'Unit | Adapter | region search', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('show-hock-app/tests/unit/adapters/region-search-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/region-search-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/region-search-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/adapters/region-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:region', 'Unit | Adapter | region', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('show-hock-app/tests/unit/adapters/region-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/region-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/region-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/adapters/venue-calendar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:venue-calendar', 'Unit | Adapter | venue calendar', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('show-hock-app/tests/unit/adapters/venue-calendar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/venue-calendar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/venue-calendar-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/adapters/venue-search-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:venue-search', 'Unit | Adapter | venue search', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('show-hock-app/tests/unit/adapters/venue-search-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/adapters/venue-search-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/venue-search-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:application', 'Unit | Controller | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/application-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/application-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/artist/event-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:artist/event', 'Unit | Controller | artist/event', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/artist/event-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/artist/event-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/artist/event-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/artist/event/concert-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:artist/event/concert', 'Unit | Controller | artist/event/concert', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/artist/event/concert-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/artist/event/concert-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/artist/event/concert-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/artist/event/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:artist/event/results', 'Unit | Controller | artist/event/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/artist/event/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/artist/event/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/artist/event/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/region/event-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:region/event', 'Unit | Controller | region/event', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/region/event-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/region/event-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/region/event-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/region/event/concert-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:region/event/concert', 'Unit | Controller | region/event/concert', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/region/event/concert-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/region/event/concert-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/region/event/concert-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/region/event/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:region/event/results', 'Unit | Controller | region/event/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/region/event/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/region/event/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/region/event/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/search/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:search/results', 'Unit | Controller | search/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/search/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/search/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/search/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/searches/search/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:searches/search/results', 'Unit | Controller | searches/search/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/searches/search/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/searches/search/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/searches/search/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/user/calendar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:user/calendar', 'Unit | Controller | user/calendar', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/user/calendar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/user/calendar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/user/calendar-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/user/change-location-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:user/change-location', 'Unit | Controller | user/change location', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/user/change-location-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/user/change-location-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/user/change-location-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/venue/event/concert-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:venue/event/concert', 'Unit | Controller | venue/event/concert', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/venue/event/concert-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/venue/event/concert-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/venue/event/concert-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/venue/event/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:venue/event/results', 'Unit | Controller | venue/event/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/venue/event/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/venue/event/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/venue/event/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/controllers/venue/search/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:venue/search/index', 'Unit | Controller | venue/search/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('show-hock-app/tests/unit/controllers/venue/search/index-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/venue/search/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/venue/search/index-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/arr-last-test', ['exports', 'show-hock-app/helpers/arr-last', 'qunit'], function (exports, _showHockAppHelpersArrLast, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | arr last');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersArrLast.arrLast)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/arr-last-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/arr-last-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/arr-last-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/eq-test', ['exports', 'show-hock-app/helpers/eq', 'qunit'], function (exports, _showHockAppHelpersEq, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | eq');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersEq.eq)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/eq-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/eq-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/eq-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/format-day-test', ['exports', 'show-hock-app/helpers/format-day', 'qunit'], function (exports, _showHockAppHelpersFormatDay, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | format day');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersFormatDay.formatDay)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/format-day-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/format-day-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/format-day-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/format-mon-test', ['exports', 'show-hock-app/helpers/format-mon', 'qunit'], function (exports, _showHockAppHelpersFormatMon, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | format mon');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersFormatMon.formatMon)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/format-mon-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/format-mon-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/format-mon-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/format-month-test', ['exports', 'show-hock-app/helpers/format-month', 'qunit'], function (exports, _showHockAppHelpersFormatMonth, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | format month');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersFormatMonth.formatMonth)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/format-month-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/format-month-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/format-month-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/format-time-test', ['exports', 'show-hock-app/helpers/format-time', 'qunit'], function (exports, _showHockAppHelpersFormatTime, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | format time');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersFormatTime.formatTime)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/format-time-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/format-time-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/format-time-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/format-weekday-test', ['exports', 'show-hock-app/helpers/format-weekday', 'qunit'], function (exports, _showHockAppHelpersFormatWeekday, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | format weekday');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersFormatWeekday.formatWeekday)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/format-weekday-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/format-weekday-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/format-weekday-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/format-year-test', ['exports', 'show-hock-app/helpers/format-year', 'qunit'], function (exports, _showHockAppHelpersFormatYear, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | format year');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersFormatYear.formatYear)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/format-year-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/format-year-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/format-year-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/gt-test', ['exports', 'show-hock-app/helpers/gt', 'qunit'], function (exports, _showHockAppHelpersGt, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | gt');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersGt.gt)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/gt-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/gt-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/gt-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/lt-test', ['exports', 'show-hock-app/helpers/lt', 'qunit'], function (exports, _showHockAppHelpersLt, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | lt');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersLt.lt)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/lt-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/lt-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/lt-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/neq-test', ['exports', 'show-hock-app/helpers/neq', 'qunit'], function (exports, _showHockAppHelpersNeq, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | neq');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersNeq.neq)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/neq-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/neq-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/neq-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/no-parens-test', ['exports', 'show-hock-app/helpers/no-parens', 'qunit'], function (exports, _showHockAppHelpersNoParens, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | no parens');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersNoParens.noParens)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/no-parens-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/no-parens-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/no-parens-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/not-including-curr-test', ['exports', 'show-hock-app/helpers/not-including-curr', 'qunit'], function (exports, _showHockAppHelpersNotIncludingCurr, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | not including curr');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersNotIncludingCurr.notIncludingCurr)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/not-including-curr-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/not-including-curr-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/not-including-curr-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/prev-curr-test', ['exports', 'show-hock-app/helpers/prev-curr', 'qunit'], function (exports, _showHockAppHelpersPrevCurr, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | prev curr');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersPrevCurr.prevCurr)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/prev-curr-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/prev-curr-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/prev-curr-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/sum-test', ['exports', 'show-hock-app/helpers/sum', 'qunit'], function (exports, _showHockAppHelpersSum, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | sum');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersSum.sum)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/sum-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/sum-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/sum-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/truncate-test', ['exports', 'show-hock-app/helpers/truncate', 'qunit'], function (exports, _showHockAppHelpersTruncate, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | truncate');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersTruncate.truncate)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/truncate-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/truncate-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/truncate-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/helpers/upper-case-test', ['exports', 'show-hock-app/helpers/upper-case', 'qunit'], function (exports, _showHockAppHelpersUpperCase, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | upper case');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _showHockAppHelpersUpperCase.upperCase)([42]);\n    assert.ok(result);\n  });\n});","define('show-hock-app/tests/unit/helpers/upper-case-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/helpers/upper-case-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/upper-case-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/initializers/geo-location-test', ['exports', 'ember', 'show-hock-app/initializers/geo-location', 'qunit', 'show-hock-app/tests/helpers/destroy-app'], function (exports, _ember, _showHockAppInitializersGeoLocation, _qunit, _showHockAppTestsHelpersDestroyApp) {\n\n  (0, _qunit.module)('Unit | Initializer | geo location', {\n    beforeEach: function beforeEach() {\n      var _this = this;\n\n      _ember['default'].run(function () {\n        _this.application = _ember['default'].Application.create();\n        _this.application.deferReadiness();\n      });\n    },\n    afterEach: function afterEach() {\n      (0, _showHockAppTestsHelpersDestroyApp['default'])(this.application);\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    (0, _showHockAppInitializersGeoLocation.initialize)(this.application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('show-hock-app/tests/unit/initializers/geo-location-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/initializers/geo-location-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/geo-location-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/mixins/reset-scroll-test', ['exports', 'ember', 'show-hock-app/mixins/reset-scroll', 'qunit'], function (exports, _ember, _showHockAppMixinsResetScroll, _qunit) {\n\n  (0, _qunit.module)('Unit | Mixin | reset scroll');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var ResetScrollObject = _ember['default'].Object.extend(_showHockAppMixinsResetScroll['default']);\n    var subject = ResetScrollObject.create();\n    assert.ok(subject);\n  });\n});","define('show-hock-app/tests/unit/mixins/reset-scroll-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/mixins/reset-scroll-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/reset-scroll-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/calendar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('calendar', 'Unit | Model | calendar', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/calendar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/calendar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/calendar-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/concert-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('concert', 'Unit | Model | concert', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/concert-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/concert-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/concert-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/event-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('event', 'Unit | Model | event', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/event-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/event-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/event-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/location-geo-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('location-geo', 'Unit | Model | location geo', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/location-geo-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/location-geo-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/location-geo-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/location-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('location', 'Unit | Model | location', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/location-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/location-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/location-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/performer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('performer', 'Unit | Model | performer', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/performer-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/performer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/performer-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/region-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('location', 'Unit | Model | location', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/region-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/region-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/region-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/regionsearch-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('locationsearch', 'Unit | Model | locationsearch', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/regionsearch-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/regionsearch-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/regionsearch-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/show-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('show', 'Unit | Model | show', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/show-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/show-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/show-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/similar-artist-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('similar-artist', 'Unit | Model | similar artist', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/similar-artist-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/similar-artist-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/similar-artist-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/upcoming-event-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('upcoming-event', 'Unit | Model | upcoming event', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/upcoming-event-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/upcoming-event-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/upcoming-event-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/venue-calendar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('venue-calendar', 'Unit | Model | venue calendar', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/venue-calendar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/venue-calendar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/venue-calendar-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/venue-search-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('venue-search', 'Unit | Model | venue search', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/venue-search-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/venue-search-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/venue-search-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/models/venue-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('venue', 'Unit | Model | venue', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('show-hock-app/tests/unit/models/venue-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/venue-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/venue-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:application', 'Unit | Route | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/application-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/application-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/artist-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:artist', 'Unit | Route | artist', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/artist-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/artist-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/artist-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/artist/event-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:artist/event', 'Unit | Route | artist/event', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/artist/event-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/artist/event-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/artist/event-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/artist/event/concert-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:artist/event/concert', 'Unit | Route | artist/event/concert', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/artist/event/concert-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/artist/event/concert-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/artist/event/concert-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/artist/event/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:artist/event/results', 'Unit | Route | artist/event/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/artist/event/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/artist/event/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/artist/event/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/artist/search-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:artist/search', 'Unit | Route | artist/search', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/artist/search-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/artist/search-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/artist/search-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/artist/search/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:artist/search/index', 'Unit | Route | artist/search/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/artist/search/index-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/artist/search/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/artist/search/index-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/artist/search/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:artist/search/results', 'Unit | Route | artist/search/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/artist/search/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/artist/search/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/artist/search/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/artistsearch/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:artistsearches/results', 'Unit | Route | artistsearches/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/artistsearch/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/artistsearch/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/artistsearch/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/change-password-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:change-password', 'Unit | Route | change password', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/change-password-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/change-password-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/change-password-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/concert/event-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:concert/event', 'Unit | Route | concert/event', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/concert/event-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/concert/event-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/concert/event-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/concert/event/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:concert/event/results', 'Unit | Route | concert/event/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/concert/event/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/concert/event/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/concert/event/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/event/event-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:event/event', 'Unit | Route | event/event', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/event/event-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/event/event-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/event/event-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/index-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/region-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:location', 'Unit | Route | location', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/region-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/region-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/region-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/region/event-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:region/event', 'Unit | Route | region/event', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/region/event-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/region/event-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/region/event-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/region/event/concert-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:region/event/concert', 'Unit | Route | region/event/concert', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/region/event/concert-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/region/event/concert-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/region/event/concert-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/region/event/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:region/event/results', 'Unit | Route | region/event/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/region/event/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/region/event/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/region/event/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/region/search-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:region/search', 'Unit | Route | region/search', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/region/search-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/region/search-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/region/search-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/region/search/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:region/search/index', 'Unit | Route | region/search/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/region/search/index-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/region/search/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/region/search/index-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/region/search/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:region/search/results', 'Unit | Route | region/search/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/region/search/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/region/search/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/region/search/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/regionsearch-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:eventssearches', 'Unit | Route | eventssearches', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/regionsearch-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/regionsearch-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/regionsearch-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/regionsearch/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:eventssearches/results', 'Unit | Route | eventssearches/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/regionsearch/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/regionsearch/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/regionsearch/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/searches-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:searches', 'Unit | Route | searches', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/searches-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/searches-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/searches-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/searches/search-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:searches/search', 'Unit | Route | searches/search', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/searches/search-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/searches/search-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/searches/search-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/searches/search/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:searches/search/results', 'Unit | Route | searches/search/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/searches/search/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/searches/search/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/searches/search/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/sign-in-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:sign-in', 'Unit | Route | sign in', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/sign-in-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/sign-in-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/sign-in-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/sign-up-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:sign-up', 'Unit | Route | sign up', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/sign-up-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/sign-up-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/sign-up-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/sign-up/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:sign-up/index', 'Unit | Route | sign up/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/sign-up/index-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/sign-up/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/sign-up/index-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/sign-up/new-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:sign-up/new', 'Unit | Route | sign up/new', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/sign-up/new-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/sign-up/new-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/sign-up/new-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/user-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:user', 'Unit | Route | user', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/user-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/user-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/user-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/user/calendar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:user/calendar', 'Unit | Route | user/calendar', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/user/calendar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/user/calendar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/user/calendar-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/user/change-location-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:user/change-location', 'Unit | Route | user/change location', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/user/change-location-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/user/change-location-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/user/change-location-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/user/change-location/confirm-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:user/change-location/confirm', 'Unit | Route | user/change location/confirm', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/user/change-location/confirm-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/user/change-location/confirm-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/user/change-location/confirm-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/user/change-location/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:user/change-location/results', 'Unit | Route | user/change location/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/user/change-location/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/user/change-location/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/user/change-location/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/venue-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:venue', 'Unit | Route | venue', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/venue-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/venue-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/venue-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/venue/event-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:venue/event', 'Unit | Route | venue/event', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/venue/event-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/venue/event-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/venue/event-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/venue/event/concert-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:venue/event/concert', 'Unit | Route | venue/event/concert', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/venue/event/concert-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/venue/event/concert-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/venue/event/concert-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/venue/event/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:venue/event/results', 'Unit | Route | venue/event/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/venue/event/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/venue/event/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/venue/event/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/venue/search-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:venue/search', 'Unit | Route | venue/search', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/venue/search-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/venue/search-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/venue/search-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/venue/search/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:venue/search/index', 'Unit | Route | venue/search/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/venue/search/index-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/venue/search/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/venue/search/index-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/routes/venue/search/results-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:venue/search/results', 'Unit | Route | venue/search/results', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('show-hock-app/tests/unit/routes/venue/search/results-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/venue/search/results-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/venue/search/results-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/serializers/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('application', 'Unit | Serializer | application', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:application']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('show-hock-app/tests/unit/serializers/application-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/serializers/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/application-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/serializers/artistsearch-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('artistsearch', 'Unit | Serializer | artistsearch', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:artistsearch']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('show-hock-app/tests/unit/serializers/artistsearch-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/serializers/artistsearch-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/artistsearch-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/serializers/calendar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('calendar', 'Unit | Serializer | calendar', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:calendar']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('show-hock-app/tests/unit/serializers/calendar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/serializers/calendar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/calendar-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/serializers/location-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('location', 'Unit | Serializer | location', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:location']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('show-hock-app/tests/unit/serializers/location-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/serializers/location-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/location-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/serializers/region-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('region', 'Unit | Serializer | region', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:region']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('show-hock-app/tests/unit/serializers/region-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/serializers/region-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/region-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/serializers/show-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('show', 'Unit | Serializer | show', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:show']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('show-hock-app/tests/unit/serializers/show-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/serializers/show-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/show-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/serializers/user-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('user', 'Unit | Serializer | user', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:user']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('show-hock-app/tests/unit/serializers/user-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/serializers/user-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/user-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/access-artist-name-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:access-artist-name', 'Unit | Service | access artist name', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/access-artist-name-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/access-artist-name-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/access-artist-name-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/access-artist-params-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:access-artist-params', 'Unit | Service | access artist params', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/access-artist-params-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/access-artist-params-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/access-artist-params-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/access-artist-show-count-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:access-artist-show-count', 'Unit | Service | access artist show count', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/access-artist-show-count-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/access-artist-show-count-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/access-artist-show-count-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/access-child-data-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:access-child-data', 'Unit | Service | access child data', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/access-child-data-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/access-child-data-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/access-child-data-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/access-region-obj-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:access-region-obj', 'Unit | Service | access region obj', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/access-region-obj-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/access-region-obj-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/access-region-obj-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/access-venue-name-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:access-venue-name', 'Unit | Service | access venue name', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/access-venue-name-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/access-venue-name-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/access-venue-name-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/ajax-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:ajax', 'Unit | Service | ajax', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/ajax-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/ajax-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/ajax-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/auth-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:auth', 'Unit | Service | auth', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/auth-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/auth-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/auth-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/geo-location-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:geo-location', 'Unit | Service | geo location', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/geo-location-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/geo-location-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/geo-location-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/get-user-calendars-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:get-user-calendars', 'Unit | Service | get user calendars', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/get-user-calendars-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/get-user-calendars-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/get-user-calendars-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/save-user-location-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:save-user-location', 'Unit | Service | save user location', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/save-user-location-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/save-user-location-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/save-user-location-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/upcoming-event-artist-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:upcoming-event-artist', 'Unit | Service | upcoming event artist', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/upcoming-event-artist-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/upcoming-event-artist-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/upcoming-event-artist-test.js should pass jshint.');\n  });\n});","define('show-hock-app/tests/unit/services/user-location-setting-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:user-location-setting', 'Unit | Service | user location setting', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('show-hock-app/tests/unit/services/user-location-setting-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/user-location-setting-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/user-location-setting-test.js should pass jshint.');\n  });\n});","require('show-hock-app/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxFA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdfile":"tests.js"}